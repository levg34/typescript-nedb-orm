name: E2E Tests

# Only trigger, when the Node.js Package workflow succeeded
on:
  push:
  workflow_dispatch:
  workflow_run:
    workflows: ["Node.js Package"]
    types:
      - completed

jobs:
  test:
    # Only run if the Node.js Package workflow succeeded
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    strategy:
      matrix:
        module: [commonjs, ecmascript, ts-node, umd]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: Install and start ${{ matrix.module }}
        if: matrix.module != 'umd' # skip umd job
        working-directory: ./e2e/${{ matrix.module }}
        run: |
          npm install
          npm list typescript-nedb-orm --depth=0
          npm start
  results:
    # Run this job regardless of the status of the test job
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get test results
        id: test_results
        run: |
          # Use a bash script to get the status of each module from the previous workflow run
          # Store the results in a JSON object with the format { "directory": "status" }
          # For example: { "commonjs": "OK", "ecmascript": "KO", "ts-node": "OK", "umd": "skipped" }
          # Assign the JSON object to a variable called RESULTS

          # Declare an associative array to store the results
          declare -A RESULTS

          # Loop through the modules in the matrix
          for module in commonjs ecmascript ts-node umd; do
            # Get the status of the module from the previous workflow run using the GitHub API
            # You may need to provide a personal access token or use a secret to authenticate
            # See https://docs.github.com/en/rest/reference/actions#list-jobs-for-a-workflow-run for more details
            status=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID/jobs | jq -r --arg module "$module" '.jobs[] | select(.name == $module) | .conclusion')

            # If the status is null, it means the module was skipped
            if [ -z "$status" ]; then
              status="skipped"
            fi

            # Add the module and its status to the results array
            RESULTS[$module]=$status
          done

          # Convert the results array to a JSON object
          RESULTS=$(printf '%s\n' "${!RESULTS[@]}" | jq -nR '[inputs] | reduce .[] as $line ({}; . + { ($line): input })' <<<"${RESULTS[@]}")

          # Use the following command to set the output of this step to the RESULTS variable
          echo "::set-output name=results::$RESULTS"
      - name: Display test results
        run: |
          # Use a bash script to print the test results in a table format
          # Use the output of the previous step as the input for this step
          # For example:

          echo "Directory	Status"
          echo "${{ fromJson(steps.test_results.outputs.results) | join('\n') }}"
